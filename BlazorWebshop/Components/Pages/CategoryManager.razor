@page "/categories"
@using BlazorWebshop.Models.Entities
@using BlazorWebshop.Services
@using Microsoft.AspNetCore.Authorization
@inject ICategoryService CategoryService
@inject CategoryStateService CategoryState
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [Authorize(Roles = "admin")]

<BlazoredToasts />

<PageTitle>Categorieën</PageTitle>
<h3>Categorieën</h3>

@if (categories.Count == 0)
{
    <p><em>Loading categories...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Naam</th>
                <th>Beschrijving (optioneel)</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td><button class="btn btn-primary" @onclick="@(() => EditCategory(category.Id))">Aanpassen</button></td>
                    <td><button class="btn btn-danger" @onclick="@(() => DeleteCategory(category.Id))">Verwijderen</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="AddCategory">Categorie toevoegen</button>
}

@code {
    List<Category> categories = new List<Category>();
    Category category;

    protected override async Task OnParametersSetAsync()
    {
        categories = await CategoryService.GetAllCategoriesAsync();
    }

    void EditCategory(int? id)
    {
        NavigationManager.NavigateTo($"/edit-category/{id}");
    }

    async Task DeleteCategory(int id)
    {
        category = await CategoryService.GetCategoryByIdAsync(id);

        if (CategoryService.DoesCategoryHaveProducts(category))
        {
            ToastService.ShowError($"{category.Name} bevat nog producten en kan niet worden verwijderd.");
        }
        else
        {
            await CategoryService.DeleteCategoryAsync(id);
            categories = await CategoryService.GetAllCategoriesAsync();

            CategoryState.NotifyStateChanged();

            ToastService.ShowSuccess($"{category.Name} is verwijderd.");
        }
    }

    void AddCategory()
    {
        NavigationManager.NavigateTo($"/edit-category");
    }

}

