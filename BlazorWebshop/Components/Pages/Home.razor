@page "/"
@using BlazorWebshop.Components.Account
@using BlazorWebshop.Data
@using BlazorWebshop.Models.Entities
@using BlazorWebshop.Services
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ICategoryService CategoryService
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode @(new InteractiveServerRenderMode(prerender: false)) 

<PageTitle>Home</PageTitle>

<h1>Hallo, @firstName!</h1>
<p>Welkom op de homepagina van de V&amp;D webshop. Navigeer hier naar verschillende categorieën. </p>

@if (categories == null || categories.Count == 0)
{
    <p>Loading...</p>
}
else
{
    <div class="row mt-4 gy-4">
        @foreach (var category in categories)
        {
            <div class="col-12 col-sm-6 col-md-4 d-flex">
                <div class="card w-100 d-flex flex-column">
                    <a href="/categoryProducts/@category.Id" class='stretched-link'></a>
                    @* Hier evt afbeelding -> <img src="./images/category.png" class="card-img-top" alt="...">  *@
                    <div class="card-body flex-grow-1">
                        <h5 class="card-title">@category.Name</h5>
                        <p class="card-text">@category.Description</p>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private string? firstName;
    List<Category> categories = new List<Category>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var applicationUser = await UserManager.GetUserAsync(user);

            if (applicationUser != null)
            {
                firstName = applicationUser.FirstName;
            }
        }
        else
        {
            firstName = "gast";
        }


        categories = await CategoryService.GetAllCategoriesAsync();
    }

    private void GoToProducts(int categoryId)
    {
        NavigationManager.NavigateTo($"/categoryProducts/{categoryId}");
    }

}
